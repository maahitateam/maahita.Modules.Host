{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../index.svelte",
    "../../index.svelte",
    "../../addpresenter.svelte",
    "../../addsession.svelte",
    "../../meeting.svelte",
    "../../navbar.svelte",
    "../../notify.svelte",
    "../../presentercard.svelte",
    "../../sessioncard.svelte",
    "../../title.svelte",
    "../../unauthorized.svelte",
    "../../index.svelte",
    "../../index.svelte",
    "../../index.svelte",
    "../../index.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import axios from \"axios\";\n  import { onMount } from \"svelte\";\n  import { apihost, appModules } from \"../../config.js\";\n  import { appuser } from \"../../store.js\";\n  import { goto } from \"@sveltech/routify\";\n  let userObj = {\n    email: \"\",\n    password: \"\",\n  };\n\n  let hasError = false;\n  let error_message = \"\";\n\n  $: cssClasses = [\"button\", \"is-primary\", \"input\"];\n\n  let redirect_components = {\n    admin: \"../../admin/\",\n    presenter: \"../../presenter\",\n    user: \"../../user/\",\n  };\n\n  onMount(() => {\n    localStorage.clear();\n  });\n\n  async function handleSubmit() {\n    try {\n      cssClasses = [...cssClasses, \"is-loading\"];\n      const url = apihost + \"/\" + appModules.user + \"/signin\";\n      const loggedInuser = await axios\n        .post(url, userObj)\n        .then((res) => res.data);\n      if (loggedInuser) {\n        $appuser = { isLoggedIn: true, ...loggedInuser };\n        const claim = loggedInuser.customClaims.claim;\n        $goto(redirect_components[claim]);\n      }\n    } catch (error) {\n      hasError = \"true\";\n      error_message = \"Invalid login details\";\n      cssClasses = cssClasses.filter((c) => c !== \"is-loading\");\n    }\n  }\n</script>\n\n<style>\n  .container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n  }\n  .box {\n    width: 35rem;\n  }\n  input[type=\"email\"]:invalid,\n  input[type=\"email\"]:not(:placeholder-shown):invalid {\n    color: red;\n  }\n  input[type=\"password\"]:invalid,\n  input[type=\"password\"]:not(:placeholder-shown):invalid {\n    color: red;\n  }\n</style>\n\n<section class=\"hero is-fullheight-with-navbar\">\n  <div class=\"hero-body\" style=\"padding: 0px;border-top: solid 1px #E5E5E5;\">\n    <div class=\"container\" style=\"margin-top:-10rem;\">\n      <div class=\"box\">\n        <form name=\"userLogin\" on:submit|preventDefault={handleSubmit}>\n          <div class=\"field\">\n            <label class=\"label\">Email</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class=\"input\"\n                name=\"email\"\n                type=\"email\"\n                required\n                title=\"Enter valid email address abcd@example.com\"\n                bind:value={userObj.email}\n                placeholder=\"Email input\" />\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-envelope\" />\n              </span>\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Password</label>\n            <div class=\"control has-icons-left has-icons-right\">\n              <input\n                class=\"input\"\n                type=\"password\"\n                name=\"password\"\n                title=\"Enter valid password no less than 6 characters\"\n                min=\"6\"\n                max=\"14\"\n                required\n                bind:value={userObj.password}\n                placeholder=\"Password input\" />\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-envelope\" />\n              </span>\n              <span class=\"icon is-small is-left\">\n                <i class=\"fas fa-lock\" />\n              </span>\n            </div>\n          </div>\n          <div class=\"field\">\n            <div class=\"control\">\n              <button class={cssClasses.join(' ')} type=\"submit\">\n                <span class=\"icon is-small\">\n                  <i class=\"fas fa-sign-in-alt\" />\n                </span>\n                <span>Login to mƒÅhita</span>\n              </button>\n            </div>\n          </div>\n          {#if hasError}\n            <article class=\"message is-danger\">\n              <div class=\"message-header\">\n                <p>{error_message}</p>\n                <button class=\"delete\" aria-label=\"delete\" />\n              </div>\n            </article>\n          {/if}\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n",
    "<script>\n  import axios from \"axios\";\n  import { onMount } from \"svelte\";\n  import {\n    apihost,\n    appModules,\n    getAuthHeaders,\n    getDateParts,\n    hasKey,\n  } from \"../../config\";\n\n  import {\n    presenters,\n    presenter_sessions,\n    isAdmin,\n    token,\n    current_presenter,\n  } from \"../../store\";\n\n  import TitleBar from \"../components/title.svelte\";\n  import ProgressBar from \"../components/progressbar.svelte\";\n  import SessionCard from \"../components/sessioncard.svelte\";\n  import PresenterCard from \"../components/presentercard.svelte\";\n  import AddPresenterView from \"../components/addpresenter.svelte\";\n  import AddSessionView from \"../components/addsession.svelte\";\n  import UnAuthorizedView from \"../components/unauthorized.svelte\";\n  import Meeting from \"../components/meeting.svelte\";\n  import Notify from \"../components/notify.svelte\";\n\n  $: cssClasses = [\"column\"];\n  $: notifyConfig = {};\n\n  let module_config = {\n    is_presenter_sessions_loading: false,\n    is_loading: false,\n    show_presenter_info: false,\n    progres_bar_message: \"\",\n    current_session: {},\n    add_new_presenter: false,\n    show_add_session: false,\n    show_notification: false,\n  };\n\n  onMount(async () => {\n    if ($isAdmin) {\n      module_config.is_loading = true;\n      const url = `${apihost}/${appModules.presenter}`;\n      const headers = getAuthHeaders($token);\n      const result = await axios.get(url, headers);\n      $presenters = await result.data;\n      module_config.is_loading = false;\n    }\n  });\n  // the event is a dispatch event coming from component\n  const handleAddSession = async (event) => {\n    try {\n      const sessiondata = event.detail; // dispatch event data is avaible in event.detail\n      notifyConfig = {\n        cssClass: \"is-info\",\n      };\n      if (sessiondata.isadd) {\n        const temp = [...$presenter_sessions, sessiondata];\n        $presenter_sessions = temp\n          .map((data) => getDateParts(data, \"scheduledon\"))\n          .sort(\n            (a, b) => new Date(b[\"scheduledon\"]) - new Date(a[\"scheduledon\"])\n          );\n        notifyConfig[\"message\"] = `${sessiondata.title} is added`;\n      } else {\n        // update one item in the list\n        const filter = $presenter_sessions.filter(\n          (s) => sessiondata.id !== s.id\n        );\n        $presenter_sessions = [];\n        $presenter_sessions = [...filter, sessiondata]\n          .map((data) => getDateParts(data, \"scheduledon\"))\n          .sort(\n            (a, b) => new Date(b[\"scheduledon\"]) - new Date(a[\"scheduledon\"])\n          );\n        notifyConfig[\"message\"] = `${sessiondata.title} is updated`;\n      }\n      module_config.current_session = {};\n      module_config.show_add_session = false;\n      module_config.show_notification = true;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleAddPresenter = async (event) => {\n    try {\n      const presenter = event.detail; // dispatch event data is avaible in event.detail\n      const url = `${apihost}/${appModules.presenter}`;\n      presenter.status = 1;\n      const result = await axios\n        .post(url, presenter, getAuthHeaders($token))\n        .then((res) => res.data);\n      $presenters = [...$presenters, result];\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addpresenter = async () => {\n    $current_presenter = {};\n    cssClasses.push(\"is-half\");\n    module_config.add_new_presenter = true;\n    module_config.progres_bar_message = \"Loading add presenter\";\n  };\n\n  const view_presenter_info = async (presenter) => {\n    try {\n      $current_presenter = {};\n      $current_presenter = presenter;\n      module_config.show_add_session = false;\n      module_config.show_presenter_info = true;\n      module_config.is_presenter_sessions_loading = true;\n      module_config.progres_bar_message = `${$current_presenter.displayName} sessions`;\n      const url = `${apihost}/${appModules.session}/createdby/${presenter.id}`;\n      const headers = getAuthHeaders($token);\n      const result = await axios.get(url, headers).then((res) => res.data);\n      $presenter_sessions = result\n        .map((data) => getDateParts(data, \"scheduledon\"))\n        .sort(\n          (a, b) => new Date(b[\"scheduledon\"]) - new Date(a[\"scheduledon\"])\n        );\n      module_config.is_presenter_sessions_loading = false;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addsession = () => {\n    module_config.show_add_session = true;\n    module_config.current_session = {};\n  };\n\n  const closeAddPresenter = async () => {\n    try {\n      const close = event.detail;\n      if (close && $isAdmin) {\n        module_config.add_new_presenter = false;\n        $current_presenter = {};\n      }\n    } catch (error) {}\n  };\n\n  const closeaddsession = async () => {\n    const close = event.detail;\n    if (close) {\n      module_config.show_add_session = false;\n      module_config.current_session = {};\n    }\n  };\n\n  const goback = async () => {\n    module_config.show_presenter_info = false;\n    $current_presenter = {};\n  };\n\n  const handlecanelsession = async (event) => {\n    const data = event.detail;\n    notifyConfig = {\n      cssClass: \"is-info\",\n      message: `${data.title} is cancelled`,\n    };\n    module_config.show_notification = true;\n    console.log(data);\n  };\n  const handlestartsession = async (event) => {\n    const data = event.detail;\n    notifyConfig = {\n      cssClass: \"is-info\",\n      message: `${data.title} is started`,\n    };\n    module_config.show_notification = true;\n    console.log(data);\n  };\n  const handlestopsession = async (event) => {\n    const data = event.detail;\n    notificyConfig = {\n      cssClass: \"is-info\",\n      message: `${data.title} is stopped`,\n    };\n    module_config.show_notification = true;\n    console.log(data);\n  };\n  const handleeditsession = (event) => {\n    module_config.current_session = { ...event.detail };\n    notifyConfig = {\n      cssClass: \"is-info\",\n      message: `${module_config.current_session.title} is updated`,\n    };\n    module_config.show_notification = true;\n    module_config.show_add_session = true;\n  };\n  const handledeletesession = (event) => {\n    const data = event.detail;\n    $presenter_sessions = $presenter_sessions.filter((s) => s.id !== data.id);\n    notifyConfig = {\n      cssClass: \"is-info\",\n      message: `${data.title} is deleted`,\n    };\n    module_config.show_notification = true;\n  };\n  const closenotify = () => {\n    module_config.show_notification = false;\n  };\n</script>\n\n<style>\n  .container {\n    padding-top: 32px;\n  }\n  .grid-container {\n    padding: 10px;\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  }\n  .grid {\n    max-height: 84vh;\n    overflow: auto;\n  }\n</style>\n\n{#if $isAdmin}\n  {#if module_config.is_loading}\n    <div class=\"container\">\n      <ProgressBar module=\"presenters\" />\n    </div>\n  {:else}\n    <div\n      class=\"columns\"\n      style=\"padding-left: 2rem;padding-right: 2rem;padding-top:2rem;\">\n      {#if !module_config.show_presenter_info}\n        <div class={cssClasses.join(' ')}>\n          <div\n            style=\"display: flex;justify-content:\n            space-evenly;align-items:center;\">\n            <div>\n              <TitleBar message=\"Active presenters in maahita\" />\n            </div>\n            <div>\n              <button on:click={addpresenter} class=\"button is-primary\">\n                <span>\n                  <i class=\"fas fa-user\" />\n                </span>\n                <span>&nbsp;Add Presenter</span>\n              </button>\n            </div>\n          </div>\n          <div class=\"grid\">\n            <div class=\"grid-container container\">\n              {#each $presenters as presenter}\n                <PresenterCard\n                  current={$current_presenter}\n                  on:click={() => view_presenter_info(presenter)}\n                  data={presenter} />\n              {/each}\n            </div>\n          </div>\n        </div>\n        {#if module_config.add_new_presenter}\n          <div class={cssClasses.join(' ')}>\n            <AddPresenterView\n              on:closeAddPresenter={closeAddPresenter}\n              presenterdata={$current_presenter}\n              on:submitpresenter={handleAddPresenter}\n              admin=\"true\"\n              add=\"true\"\n              close=\"true\"\n              edit=\"false\" />\n          </div>\n        {/if}\n      {:else}\n        <div class=\"column is-half\">\n          <div class=\"back\">\n            <button on:click={goback} class=\"button is-text\">Go Back</button>\n          </div>\n          <AddPresenterView\n            presenterdata={$current_presenter}\n            on:submitpresenter={handleAddPresenter}\n            admin=\"true\"\n            add=\"false\"\n            close=\"false\"\n            edit=\"true\" />\n        </div>\n        <div class=\"column is-half\">\n          {#if module_config.is_presenter_sessions_loading}\n            <ProgressBar module={module_config.progres_bar_message} />\n          {:else}\n            <div style=\"display:flex; justify-content:space-between;\">\n              <div>\n                <TitleBar message={module_config.progres_bar_message} />\n              </div>\n              <div>\n                <button on:click={addsession} class=\"button is-primary\">\n                  <span>\n                    <i class=\"fas fa-plus-square\" />\n                  </span>\n                  <span>&nbsp;Add a Session</span>\n                </button>\n              </div>\n            </div>\n            {#if module_config.show_add_session}\n              <AddSessionView\n                add={hasKey(module_config.current_session, 'id') ? 'false' : 'true'}\n                edit={hasKey(module_config.current_session, 'id') ? 'true' : 'false'}\n                role=\"admin\"\n                currentpresenter={$current_presenter}\n                on:submitsession={handleAddSession}\n                on:closeaddsession={closeaddsession}\n                sessiondata={module_config.current_session} />\n            {/if}\n            {#if $presenter_sessions.length > 0}\n              <div class=\"box\">\n                {#each $presenter_sessions as session}\n                  <SessionCard\n                    on:editsession={handleeditsession}\n                    on:canelsession={handlecanelsession}\n                    on:startsession={handlestartsession}\n                    on:stopsession={handlestopsession}\n                    on:deletesession={handledeletesession}\n                    data={session}\n                    role=\"presenter\" />\n                {/each}\n              </div>\n            {:else}\n              <div class=\"box\">\n                <TitleBar message=\"create sessions to spread the knowledge\" />\n              </div>\n            {/if}\n          {/if}\n        </div>\n      {/if}\n    </div>\n    <Meeting />\n    {#if module_config.show_notification}\n      <Notify on:closenotify={closenotify} config={notifyConfig} />\n    {/if}\n  {/if}\n{:else}\n  <div>\n    <UnAuthorizedView message=\"You are not authorized to view the content\" />\n  </div>\n{/if}\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import axios from \"axios\";\n  import { token, appuser } from \"../../store\";\n  import {\n    hasKey,\n    getBase64,\n    apihost,\n    appModules,\n    getAuthHeaders,\n  } from \"../../config\";\n  const dispatch = createEventDispatcher();\n  export let add = \"true\";\n  export let edit = \"false\";\n  export let close = \"false\";\n  export let admin = \"true\";\n  export let presenterdata = {};\n  onMount(() => {\n    if (hasKey(presenterdata, \"dateofbirth\")) {\n      presenterdata[\"dateofbirth\"] = presenterdata[\"dateofbirth\"].split(\"T\")[0];\n    }\n  });\n\n  const handleSubmit = async () => dispatch(\"submitpresenter\", presenterdata);\n  const handleClose = async (e) => {\n    e.preventDefault();\n    dispatch(\"closeAddPresenter\", { close: true });\n  };\n  const handleProfileUpload = async (e) => {\n    try {\n      const file = e.target.files[0];\n      const res = await getBase64(file);\n      const body = {\n        filename: file.name,\n        profile: res,\n        imagebucket: \"avatar\",\n        fileExtention: file.type,\n      };\n      const url = `${apihost}/${appModules.upload}/${presenterdata.id}`;\n      const headers = getAuthHeaders($token);\n      const result = await axios\n        .post(url, body, headers)\n        .then((res) => res.data);\n      console.log(result);\n      if (result) {\n        presenterdata = { ...presenterdata, photoURL: result.photoURL };\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n</script>\n\n<style>\n  .profile {\n    border-radius: 50%;\n    height: 210px;\n    width: 210px;\n  }\n</style>\n\n<section>\n  <form name=\"addpresenter\" on:submit|preventDefault={handleSubmit}>\n    <div class=\"box\">\n      {#if close === 'true'}\n        <header class=\"is-pulled-right\">\n          <button\n            type=\"button\"\n            class=\"delete\"\n            on:click={handleClose}\n            aria-label=\"close\" />\n        </header>\n      {/if}\n      <article class=\"media\">\n        <div\n          class=\"media-left\"\n          style=\"width: 50%;margin-right: 0rem !important;padding: 10px;\">\n          <div class=\"field\">\n            <div class=\"control\" style=\"text-align:center;\">\n              {#if presenterdata.photoURL}\n                <figure class=\"figure\">\n                  <img src={presenterdata.photoURL} class=\"profile\" alt />\n                </figure>\n              {:else}\n                <label\n                  class=\"image\"\n                  title=\"click on image to upload\"\n                  for=\"profilepic\"\n                  style=\"font-size:3.4rem; text-align:center;cursor:pointer;\">\n                  <span>\n                    <i class=\"far fa-3x fa-user-circle\" />\n                  </span>\n                </label>\n              {/if}\n              <label for=\"note \">\n                <span\n                  name=\"note\"\n                  class=\"has-text-danger has-text-weight-bold is-size-7\">\n                  * click on image to update\n                </span>\n              </label>\n              <input\n                class=\"input is-hidden\"\n                type=\"file\"\n                name=\"profilepic\"\n                on:change={handleProfileUpload}\n                accept=\"image/x-png,image/jpg,image/jpeg\"\n                id=\"profilepic\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Full Name</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                name=\"displayname\"\n                type=\"text\"\n                required\n                bind:value={presenterdata.displayName}\n                placeholder=\"Presenter Fullname\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Email</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"email\"\n                name=\"email\"\n                required\n                bind:value={presenterdata.email}\n                placeholder=\"Presenter Email\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Phone</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"phone\"\n                required\n                bind:value={presenterdata.phone}\n                placeholder=\"+1234567890\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Description</label>\n            <div class=\"control\">\n              <textarea\n                class=\"input\"\n                type=\"text\"\n                name=\"description\"\n                required\n                bind:value={presenterdata.description}\n                placeholder=\"Enter bio about presenter\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Date of birth</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"date\"\n                name=\"dateofbirth\"\n                required\n                bind:value={presenterdata.dateofbirth}\n                placeholder=\"Presenter Birthday\" />\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"media-right\"\n          style=\"width: 50%;margin-left: 0rem !important;padding: 20px;\">\n          <div class=\"field\">\n            <label class=\"label\">Education</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"education\"\n                required\n                bind:value={presenterdata.education}\n                placeholder=\"Highest Education Details\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Skills</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"skills\"\n                required\n                bind:value={presenterdata.skills}\n                placeholder=\"Enter skills with comma separated\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">College</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"college\"\n                required\n                bind:value={presenterdata.college}\n                placeholder=\"Highest College Details\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Address</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"address\"\n                required\n                bind:value={presenterdata.address}\n                placeholder=\"Presenter Address\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">City</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"city\"\n                required\n                bind:value={presenterdata.city}\n                placeholder=\"Upload profile pic\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">State</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"state\"\n                required\n                bind:value={presenterdata.state}\n                placeholder=\"Presenter State\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Country</label>\n            <div class=\"control\">\n              <input\n                class=\"input\"\n                type=\"text\"\n                name=\"country\"\n                required\n                bind:value={presenterdata.country}\n                placeholder=\"Presenter Country\" />\n            </div>\n          </div>\n          {#if add === 'true'}\n            <div class=\"field\">\n              <label class=\"label\" style=\"cursor:pointer;\">\n                New User\n                <input\n                  type=\"radio\"\n                  name=\"usercategory\"\n                  value=\"new_user\"\n                  title=\"Allow user to login with this email\"\n                  required\n                  bind:group={presenterdata.usercategory} />\n              </label>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\" style=\"cursor:pointer;\">\n                Existing User\n                <input\n                  type=\"radio\"\n                  name=\"usercategory\"\n                  value=\"existing_user\"\n                  title=\"Are you making existing user as presenter\"\n                  required\n                  bind:group={presenterdata.usercategory} />\n              </label>\n            </div>\n            <div class=\"field\">\n              <div class=\"control\">\n                <button class=\"button is-primary\" type=\"submit\">\n                  <span class=\"icon\">\n                    <i class=\"fas fa-save\" />\n                  </span>\n                  <span>Submit</span>\n                </button>\n              </div>\n            </div>\n          {/if}\n          {#if edit === 'true'}\n            <div class=\"field\">\n              <div class=\"buttons is-pulled-right\">\n                <button class=\"button is-primary\">\n                  <span class=\"icon\">\n                    <i class=\"far fa-save\" />\n                  </span>\n                  <span>Save Changes</span>\n                </button>\n                {#if admin === 'true'}\n                  <button class=\"button is-danger\">\n                    <span class=\"icon\">\n                      <i class=\"fas fa-trash\" />\n                    </span>\n                    <span>Remove Presenter</span>\n                  </button>\n                {/if}\n              </div>\n            </div>\n          {/if}\n        </div>\n      </article>\n    </div>\n  </form>\n</section>\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import axios from \"axios\";\n  import { appRoles } from \"../../config\";\n  import { token, current_presenter } from \"../../store\";\n  import {\n    hasKey,\n    apihost,\n    appModules,\n    getAuthHeaders,\n    getDateParts,\n    session_remove,\n    removeUnusedFields,\n  } from \"../../config.js\";\n  const dispatch = createEventDispatcher();\n  export let role = \"user\";\n  export let add = \"true\";\n  export let edit = \"false\";\n  export let sessiondata = {};\n  export let currentpresenter = {};\n  let today = new Date();\n  let minDate = today.toISOString().slice(0, 16);\n  console.log(minDate);\n  onMount(() => {\n    console.log(currentpresenter);\n    if (hasKey(sessiondata, \"scheduledon\")) {\n      sessiondata[\"scheduledon\"] = sessiondata[\"scheduledon\"].slice(0, 16);\n    }\n  });\n  const handleSessionSubmit = async () => {\n    // after save dispatch to parent to update list\n    console.log(role);\n    try {\n      let url = \"\";\n      const headers = getAuthHeaders($token);\n      const updateObj = removeUnusedFields(sessiondata, session_remove);\n      const data = {\n        ...updateObj,\n        presenter: currentpresenter.displayName,\n        presenterid: currentpresenter.id,\n        photoURL: currentpresenter.photoURL,\n      }; // session with presenter info.\n\n      if (hasKey(sessiondata, \"id\")) {\n        url = `${apihost}/${appModules.session}/${sessiondata.id}`;\n        data.createdby = currentpresenter.id;\n        data.updatedby = currentpresenter.id;\n        const result = await axios\n          .put(url, data, headers)\n          .then((res) => res.data);\n        const sessionwithdate = getDateParts(result, \"scheduledon\");\n        dispatch(\"submitsession\", { isadd: false, ...sessionwithdate });\n      } else {\n        url = `${apihost}/${appModules.session}`;\n        data.createdby = currentpresenter.id;\n        data.updatedby = currentpresenter.id;\n        const result = await axios\n          .post(url, data, headers)\n          .then((res) => res.data);\n        const sessionwithdate = getDateParts(result, \"scheduledon\");\n        dispatch(\"submitsession\", { isadd: true, ...sessionwithdate });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSubmitRequest = async () => {\n    try {\n      let url = \"\";\n      const headers = getAuthHeaders($token);\n      const updateObj = removeUnusedFields(sessiondata, session_remove);\n      const data = {\n        ...updateObj,\n        presenter: currentpresenter.displayName,\n        presenterid: currentpresenter.id,\n        photoURL: currentpresenter.photoURL,\n      }; // session with presenter info.\n      url = `${apihost}/${appModules.sessionrequest}`;\n      data.status = 100;\n      data.createdby = currentpresenter.id;\n      data.updatedby = currentpresenter.id;\n      const result = await axios\n        .post(url, data, headers)\n        .then((res) => res.data);\n      dispatch(\"submitrequest\", result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClose = async (e) => {\n    e.preventDefault();\n    dispatch(\"closeaddsession\", { close: true });\n  };\n</script>\n\n<style>\n  .flex-start {\n    display: flex;\n    justify-content: flex-start;\n  }\n  .w25 {\n    width: 25%;\n  }\n  .mr10 {\n    margin-right: 10px;\n  }\n</style>\n\n<div class=\"box\">\n  <form name=\"addsession\" on:submit|preventDefault={handleSessionSubmit}>\n    <header class=\"is-pulled-right\">\n      <button\n        type=\"button\"\n        class=\"delete\"\n        on:click={handleClose}\n        aria-label=\"close\" />\n    </header>\n    <div class=\"container flex-start\">\n      <div class=\"field w25 mr10\">\n        <label class=\"label\">Title</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            name=\"title\"\n            type=\"text\"\n            required\n            bind:value={sessiondata.title}\n            placeholder=\"Session Title\" />\n        </div>\n      </div>\n      <div class=\"field w25 mr10\">\n        <label class=\"label\">Description</label>\n        <div class=\"control\">\n          <textarea\n            class=\"input\"\n            type=\"text\"\n            name=\"description\"\n            required\n            bind:value={sessiondata.description}\n            placeholder=\"Session description\" />\n        </div>\n      </div>\n      <div class=\"field w25 mr10\">\n        <label class=\"label\">Scheduled Date</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"datetime-local\"\n            name=\"scheduledon\"\n            min={minDate}\n            required\n            bind:value={sessiondata.scheduledon}\n            placeholder=\"Scheduled Date\" />\n        </div>\n      </div>\n      <div class=\"field w25 mr10\">\n        <label class=\"label\">Theme</label>\n        <div class=\"control\">\n          <input\n            class=\"input\"\n            type=\"text\"\n            name=\"theme\"\n            required\n            bind:value={sessiondata.theme}\n            placeholder=\"Session Theme\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"container flex-start\" style=\"align-items:flex-end;\">\n      <div class=\"field mr10\">\n        <label class=\"label\" style=\"cursor:pointer;\">\n          <input\n            name=\"category\"\n            type=\"checkbox\"\n            bind:checked={sessiondata.livestream} />\n          You Tube Streaming\n        </label>\n      </div>\n      <div class=\"field mr10\">\n        <label class=\"label\" style=\"cursor:pointer;\">\n          <input\n            name=\"category\"\n            type=\"checkbox\"\n            bind:checked={sessiondata.notification} />\n          Send Notification\n        </label>\n      </div>\n\n      {#if add === 'true'}\n        {#if role === appRoles.admin}\n          <div class=\"field mr10\">\n            <div class=\"control\">\n              <button class=\"button is-primary\" type=\"submit\">\n                <span class=\"icon is-small\">\n                  <i class=\"fas fa-save\" />\n                </span>\n                <span>Submit</span>\n              </button>\n            </div>\n          </div>\n        {:else}\n          <div class=\"field mr10\">\n            <div class=\"control\">\n              <button\n                class=\"button is-primary\"\n                type=\"button\"\n                on:click={handleSubmitRequest}>\n                <span class=\"icon is-small\">\n                  <i class=\"fas fa-save\" />\n                </span>\n                <span>Submit Request</span>\n              </button>\n            </div>\n          </div>\n        {/if}\n      {/if}\n      {#if edit === 'true'}\n        <div class=\"field mr10\">\n          <div class=\"buttons\">\n            <button\n              type=\"submit\"\n              on:submit={handleSessionSubmit}\n              class=\"button is-primary\">\n              <span class=\"icon\">\n                <i class=\"far fa-save\" />\n              </span>\n              <span>Save Changes</span>\n            </button>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </form>\n</div>\n",
    "<style>\n  dialog {\n    border: 0;\n    height: 85vh;\n    width: 80vw;\n    margin: auto;\n  }\n</style>\n\n<dialog id=\"meeting\">\n  <div class=\"dialog-headeer\" id=\"dialog-header\" />\n  <div class=\"dialog-body\" id=\"dialog-body\" />\n  <div class=\"dialog-footer\" id=\"dialog-footer\" />\n</dialog>\n",
    "<script>\n  import { redirect } from \"@sveltech/routify\";\n  import {\n    appuser,\n    isUserLoggedIn,\n    isAdmin,\n    token,\n    loggedInUserId,\n  } from \"../../store\";\n  import axios from \"axios\";\n  import { getBase64, apihost, appModules, getAuthHeaders } from \"../../config\";\n  appuser.useLocalStorage();\n  let src = \"/images/hlogo.png\";\n  const login = () => $redirect(\"../account\");\n  const logout = () => {\n    $appuser = {};\n    localStorage.clear();\n    $redirect(\"../account\");\n  };\n\n  const handleProfileUpload = async (e) => {\n    try {\n      const file = e.target.files[0];\n      const res = await getBase64(file);\n      const body = {\n        filename: file.name,\n        profile: res,\n        imagebucket: \"avatar\",\n        fileExtention: file.type,\n      };\n      const url = `${apihost}/${appModules.upload}/${$loggedInUserId}`;\n      const headers = getAuthHeaders($token);\n      const result = await axios\n        .post(url, body, headers)\n        .then((res) => res.data);\n      if (result) {\n        $appuser = { ...$appuser, photoURL: result.photoURL };\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n</script>\n\n<style>\n  .image {\n    max-height: 4rem !important;\n  }\n  .container {\n    max-width: 95vw;\n  }\n  header {\n    -webkit-box-shadow: 0px 5px 5px 0px rgba(229, 229, 229, 0.96);\n    -moz-box-shadow: 0px 5px 5px 0px rgba(229, 229, 229, 0.96);\n    box-shadow: 0px 5px 5px 0px rgba(229, 229, 229, 0.96);\n    background-color: white;\n    padding: 5px;\n  }\n  .user-profile {\n    font-size: 1.4rem;\n    margin-right: 12px;\n  }\n  .figure {\n    margin-right: 10px;\n    margin-top: 5px;\n  }\n  .profilepic {\n    border-radius: 50%;\n    height: 35px;\n    width: 30px;\n    border: solid 1px #e5e5e5;\n  }\n</style>\n\n<header>\n  <div class=\"container\">\n    <nav\n      class=\"navbar is-transparent\"\n      role=\"navigation\"\n      aria-label=\"main navigation\">\n      <div class=\"navbar-brand\">\n        <img alt=\"maahita logo\" class=\"image\" {src} />\n      </div>\n      <div class=\"navbar-end navbar-menu\">\n        <div class=\"navbar-item\">\n          {#if !$isUserLoggedIn}\n            <div class=\"buttons\">\n              <button on:click={login} class=\"button is-primary\">\n                <span class=\"icon\"> <i class=\"fas fa-sign-in-alt\" /> </span>\n                <span>Login</span>\n              </button>\n            </div>\n          {:else}\n            <div class=\"user-profile\"><span>{$appuser.displayName}</span></div>\n            <label\n              for=\"profilepic\"\n              style=\"cursor:pointer;display:flex;margin-right:10px;\"\n              title=\"click on image to upload\">\n              {#if $appuser.photoURL}\n                <figure class=\"figure\">\n                  <img class=\"profilepic\" src={$appuser.photoURL} alt=\"\" />\n                </figure>\n              {:else}\n                <span class=\"icon\" style=\"margin-right: 5px;\">\n                  <i class=\"far fa-2x fa-user-circle\" />\n                </span>\n              {/if}\n            </label>\n            <input\n              class=\"input is-hidden\"\n              type=\"file\"\n              name=\"profilepic\"\n              on:change={handleProfileUpload}\n              accept=\"image/x-png,image/jpg,image/jpeg\"\n              id=\"profilepic\" />\n            {#if $isAdmin}\n              <div class=\"navbar-item is-hoverable\">\n                <span class=\"icon\" style=\"cursor:pointer;margin-right: 5px;\">\n                  <i class=\"fas fa-2x fa-align-justify\" />\n                </span>\n                <div\n                  class=\"navbar-dropdown is-boxed\"\n                  style=\"margin-left: -8rem;\">\n                  <a class=\"navbar-item\" href=\"/admin\">Presenters</a>\n                  <a class=\"navbar-item\" href=\"/sessionrequest\">\n                    Session Requests\n                  </a>\n                </div>\n              </div>\n            {/if}\n            <span on:click={logout} class=\"icon\" style=\"cursor:pointer;\">\n              <i class=\"fas fa-2x fa-sign-out-alt\" />\n            </span>\n          {/if}\n        </div>\n      </div>\n    </nav>\n  </div>\n</header>\n",
    "<script>\n  import { fade } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n  export let config = {};\n  const closeNotifiy = () => dispatch(\"closenotify\", false);\n</script>\n\n<style>\n  .notification {\n    max-width: 400px;\n    margin-right: 30px;\n    top: 30px;\n    position: absolute;\n    z-index: 100;\n    box-sizing: border-box;\n    border-radius: 5px;\n    right: 0%;\n    opacity: 1;\n    animation: scaleme 1s;\n  }\n\n  @keyframes scaleme {\n    0% {\n      -webkit-transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: scale(1);\n      opacity: 0;\n      display: none;\n    }\n  }\n</style>\n\n<div\n  transition:fade={{ duration: 1000 }}\n  class=\"notification is-light {config.cssClass}\">\n  <button on:click={closeNotifiy} class=\"delete\" />\n  {config.message}\n</div>\n",
    "<script>\n  export let data;\n  export let current;\n</script>\n\n<style>\n  .card-image {\n    text-align: center;\n    padding-top: 15px;\n  }\n\n  .profilepic {\n    font-size: 5rem;\n    text-align: center;\n  }\n  .card-content {\n    text-align: center;\n  }\n  .card {\n    cursor: pointer;\n  }\n  .active {\n    border: solid 2px #3273dc;\n  }\n  .profile {\n    border-radius: 50%;\n    height: 210px;\n    width: 210px;\n  }\n</style>\n\n<article\n  class:active={current.id === data.id}\n  id={data.id}\n  class=\"grid-item bd\"\n  on:click>\n  <div class=\"card\">\n    <div class=\"card-image\">\n      <figure class=\"figure profilepic\">\n        {#if data.photoURL}\n          <img src={data.photoURL} class=\"profile\" alt=\"\" />\n        {:else}\n          <span>\n            <i class=\"far fa-3x fa-user-circle\" />\n          </span>\n        {/if}\n\n      </figure>\n    </div>\n    <div class=\"card-content\">\n      <div class=\"media\">\n        <div class=\"media-content\">\n          <p class=\"title is-4\">{data.displayName}</p>\n          <p class=\"subtitle is-6\">{data.email}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</article>\n",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import axios from \"axios\";\n  import {\n    apihost,\n    appModules,\n    getAuthHeaders,\n    hasKey,\n    getExternalJitsiApi,\n    meetinghost,\n  } from \"../../config\";\n  import { token, loggedInUserId, isUserLoggedIn, appuser } from \"../../store\";\n  export let data = {};\n  export let role = \"user\";\n  const dispatch = createEventDispatcher();\n  $: action_status = 1;\n  onMount(() => {\n    if (hasKey(data, \"enrollments\")) {\n      data.isEnrolled = data.enrollments.includes($loggedInUserId);\n    }\n    action_status = data.status;\n  });\n\n  const handleEditSession = () => dispatch(\"editsession\", data);\n  const handleCancelSession = async () => {\n    try {\n      const headers = getAuthHeaders($token);\n      const url = `${apihost}/${appModules.session}/${\"cancel\"}/${data.id}`;\n      const result = await axios\n        .put(url, data, headers)\n        .then((res) => res.data);\n      if (result) {\n        action_status = result.status;\n        dispatch(\"canelsession\", result);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleStartSession = async () => {\n    try {\n      const headers = getAuthHeaders($token);\n      const url = `${apihost}/${appModules.session}/${\"start\"}/${data.id}`;\n      const result = await axios\n        .put(url, data, headers)\n        .then((res) => res.data);\n      if (result) {\n        data.meetingID = result.meetingID;\n        action_status = result.status;\n        dispatch(\"startsession\", result);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleStopSession = async () => {\n    try {\n      const headers = getAuthHeaders($token);\n      const url = `${apihost}/${appModules.session}/${\"complete\"}/${data.id}`;\n      const result = await axios\n        .put(url, data, headers)\n        .then((res) => res.data);\n      if (result) {\n        action_status = result.status;\n        dispatch(\"stopsession\", result);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteSession = async () => {\n    try {\n      const headers = getAuthHeaders($token);\n      const url = `${apihost}/${appModules.session}/${data.id}`;\n      const result = await axios.delete(url, headers).then((res) => res.data);\n      if (result) {\n        action_status = result.status;\n        dispatch(\"deletesession\", data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEnroll = async () => {\n    try {\n      if (!$isUserLoggedIn) {\n        dispatch(\"handleShowModal\", true);\n        return;\n      }\n      const id = $loggedInUserId;\n      const url = `${apihost}/${appModules.session}/enroll/${id}`;\n      const result = await axios\n        .post(url, data, getAuthHeaders($token))\n        .then((res) => res.data);\n      if (result) {\n        data.isEnrolled = true;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const joinSession = async (data) => {\n    var win = window.open(`https://${meetinghost}/${data.meetingID}`);\n    win.focus();\n    // const api = getExternalJitsiApi(data.meetingid, meetinghost, $appuser);\n    // if (api) {\n    //   document.getElementById(\"meeting\").showModal();\n    //   // styles are dynamically rendered, so need to configure the styles manually.\n    //   setTimeout(() => {\n    //     let iframe = document.querySelector(\"#meeting > #dialog-body\")\n    //       .childNodes[0];\n    //     iframe.style[\"height\"] = \"85vh\";\n    //   }, 2000);\n    // }\n  };\n\n  const sendNotification = async (data) => {\n    try {\n      const id = $loggedInUserId;\n      const body = { title: data.title, message: `${data.title} is added` };\n      const url = `${apihost}/${appModules.notify}/${id}`;\n      const result = await axios\n        .post(url, body, getAuthHeaders($token))\n        .then((res) => res.data);\n      if (result) {\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const openSession = async (data) => {\n    var win = window.open(`https://${meetinghost}/${data.meetingID}`);\n    win.focus();\n    // const api = getExternalJitsiApi(data.meetingid, meetinghost, $appuser);\n    // if (api) {\n    //   document.getElementById(\"meeting\").showModal();\n    //   // styles are dynamically rendered, so need to configure the styles manually.\n    //   setTimeout(() => {\n    //     let iframe = document.querySelector(\"#meeting > #dialog-body\")\n    //       .childNodes[0];\n    //     let newWindow = window.open(`${meetinghost}/${data.meetingid}`);\n    //     iframe.style[\"height\"] = \"85vh\";\n    //   }, 2000);\n    // }\n  };\n</script>\n\n<style>\n  .box {\n    padding: 0px;\n  }\n  .session-date {\n    color: white;\n    background-color: red;\n    height: 4rem;\n    font-size: 3rem;\n    font-weight: bolder;\n    width: 8rem;\n    text-align: center;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n  }\n\n  .session-month {\n    color: white;\n    background-color: red;\n    text-align: center;\n    font-size: 2rem;\n    font-weight: bold;\n  }\n  .session-time {\n    text-align: center;\n    height: 2rem;\n    border: solid red 1px;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    padding-top: 2px;\n  }\n  .media-content {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n  .media-right {\n    width: 10rem;\n    text-align: center;\n  }\n  .image {\n    height: 7rem;\n    text-align: center;\n    padding-top: 30px;\n  }\n  i {\n    height: 100px !important;\n    width: 100px !important;\n  }\n  .session-title {\n    font-size: 2rem;\n    font-weight: 600;\n  }\n  .session-description {\n    font-size: 1.3rem;\n    padding: 5px 0;\n  }\n\n  .session-theme {\n    padding: 5px 0;\n  }\n  .profile {\n    border-radius: 50%;\n    height: 125px;\n    width: 125px;\n    margin: 10px auto;\n  }\n\n  .media {\n    border: solid 1px #e5e5e5;\n    border-radius: 5px;\n  }\n  @keyframes up-right {\n    0% {\n      transform: scale(1);\n      opacity: 0.25;\n    }\n    50% {\n      transform: scale (1, 5);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 0.25;\n    }\n  }\n  .enrolled {\n    color: red;\n    animation: up-right 1s infinite;\n  }\n</style>\n\n<div class=\"box\">\n  <article class=\"media\">\n    <div class=\"medial-left\">\n      <div class=\"session-date\">{data.daypart}</div>\n      <div class=\"session-month\">{data.monthpart}</div>\n      <div class=\"session-time\">{data.timepart}</div>\n    </div>\n    <div class=\"media-content\">\n      <div class=\"session-title\">{data.title}</div>\n      <div class=\"session-description\">{data.description}</div>\n      <div class=\"session-theme\">{data.theme}</div>\n      {#if role === 'user'}\n        <div class=\"buttons\">\n          {#if data.isEnrolled}\n            <button class=\"button is-danger is-inverted\">\n              <span class=\"icon enrolled\"> <i class=\"fas fa-circle\" /> </span>\n              <span>Enrolled</span>\n            </button>\n          {:else}\n            <button\n              on:click={handleEnroll}\n              type=\"button\"\n              class=\"button is-text\">\n              Enroll\n            </button>\n          {/if}\n          {#if action_status === 3 && data.isEnrolled}\n            <button\n              on:click={() => joinSession(data)}\n              type=\"button\"\n              class=\"button is-info is-inverted\">\n              <span class=\"icon\"> <i class=\"fas fa-user-friends\" /> </span>\n              <span>Join Session</span>\n            </button>\n          {/if}\n        </div>\n        <div class=\"field\" />\n      {:else}\n        <div class=\"buttons\">\n          <button\n            on:click={handleEditSession}\n            class=\"button is-primary is-active\">\n            <span class=\"icon\"> <i class=\"far fa-edit\" /> </span>\n            <span>Edit</span>\n          </button>\n          {#if action_status === 1}\n            <button\n              type=\"button\"\n              on:click={handleStartSession}\n              class=\"button is-link is-active\">\n              <span class=\"icon\"> <i class=\"fas fa-play\" /> </span>\n              <span>Start</span>\n            </button>\n          {/if}\n          {#if action_status === 3}\n            <button\n              type=\"button\"\n              on:click={handleStopSession}\n              class=\"button is-link is-active\">\n              <span class=\"icon\"> <i class=\"fas fa-stop-circle\" /> </span>\n              <span>Complete</span>\n            </button>\n          {/if}\n          <button\n            type=\"button\"\n            on:click={handleCancelSession}\n            class=\"button is-warning is-active\">\n            <span class=\"icon\"> <i class=\"fas fa-window-close\" /> </span>\n            <span>Cancel</span>\n          </button>\n          <button\n            type=\"button\"\n            on:click={handleDeleteSession}\n            class=\"button is-danger\">\n            <span class=\"icon\"> <i class=\"fas fa-trash\" /> </span>\n            <span>Delete</span>\n          </button>\n          {#if !data.notification}\n            <button\n              type=\"button\"\n              class=\"button is-success\"\n              on:click={() => sendNotification(data)}>\n              <span class=\"icon\"> <i class=\"fas fa-paper-plane\" /> </span>\n              <span>Send Notification</span>\n            </button>\n          {/if}\n          {#if data.meetingID}\n            <button\n              type=\"button\"\n              on:click={() => openSession(data)}\n              class=\"button is-info\">\n              <span class=\"icon\"> <i class=\"fas fa-user-friends\" /> </span>\n              <span>Open Session</span>\n            </button>\n          {/if}\n        </div>\n        <div class=\"field\" />\n      {/if}\n    </div>\n    {#if role === 'user'}\n      <div class=\"media-right\">\n        {#if data.photoURL}\n          <figure class=\"figure\">\n            <img src={data.photoURL} class=\"profile\" alt />\n          </figure>\n        {:else}\n          <figure class=\"image\"><i class=\"fas fa-3x fa-user-circle\" /></figure>\n        {/if}\n        <div class=\"presenter-details\">{data.presenter}</div>\n      </div>\n    {/if}\n  </article>\n</div>\n",
    "<script>\n  export let message = \"Currently Active Sessions\";\n  export let iserror = false;\n  let cssClasses = [\"section\"];\n  if (iserror) {\n    cssClasses.push(\"has-text-danger\");\n  }\n</script>\n\n<style>\n  section {\n    height: 70px;\n    font-size: 1.7rem;\n    text-align: center;\n    padding: 10px;\n    font-weight: 700;\n    font-family: \"Comfortaa\";\n  }\n</style>\n\n<section class=\"section\">\n  <h3 class={iserror ? 'has-text-danger' : 'has-text-black'}>{message}</h3>\n</section>\n",
    "<script>\n  import TitleBar from \"./title.svelte\";\n  export let message = \"you are not authorized to view the content\";\n  export let iserror = true;\n  let src = \"/images/logo.png\";\n</script>\n\n<style>\n  .card {\n    padding: 10px;\n    width: 50%;\n    margin: 80px auto;\n  }\n  .image {\n    height: 150px;\n    width: 120px;\n    margin: 50px auto;\n  }\n</style>\n\n<div class=\"card\">\n  <div class=\"card-image\">\n    <figure class=\"image\">\n      <img {src} alt=\"maahita logo\" />\n    </figure>\n  </div>\n  <div class=\"card-content\">\n    <div class=\"content\">\n      <TitleBar {iserror} {message} />\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import axios from \"axios\";\n\n  import TitleBar from \"./components/title.svelte\";\n  import ProgressBar from \"./components/progressbar.svelte\";\n  import Modal from \"./components/modal.svelte\";\n  import SessionCard from \"./components/sessioncard.svelte\";\n\n  import { apihost, appModules, getDateParts } from \"../config.js\";\n  import { appuser, sessions } from \"../store\";\n  appuser.useLocalStorage(); // enable local storage\n\n  let showModal = false;\n  let isLoading = false;\n\n  onMount(async () => {\n    isLoading = true;\n    const url = apihost + \"/\" + appModules.session + \"/public\";\n    const result = await axios.get(url).then((res) => res.data);\n    $sessions = result\n      .map((data) => getDateParts(data, \"scheduledon\"))\n      .sort((a, b) => new Date(b[\"scheduledon\"]) - new Date(a[\"scheduledon\"]));\n    isLoading = false;\n  });\n\n  const enroll = () => {\n    if (!$appuser.isLoggedIn) {\n      showModal = true;\n    }\n  };\n  const handleShowModal = () => {\n    showModal = true;\n  };\n  const modalClose = () => (showModal = false);\n</script>\n\n<style>\n  .container {\n    overflow: auto;\n    scroll-behavior: smooth;\n  }\n</style>\n\n<div class=\"container\">\n  {#if isLoading}\n    <ProgressBar module=\"session\" />\n  {:else}\n    <TitleBar message=\"Current Sessions in mƒÅhita\" />\n    {#each $sessions as session}\n      <SessionCard\n        on:handleShowModal={handleShowModal}\n        on:click={enroll}\n        role=\"user\"\n        data={session} />\n    {/each}\n  {/if}\n  {#if showModal}\n    <Modal\n      on:click={modalClose}\n      message=\"Please login to the system to enroll\" />\n  {/if}\n</div>\n",
    "<script>\n  import axios from \"axios\";\n  import { onMount } from \"svelte\";\n  import {\n    apihost,\n    appModules,\n    getAuthHeaders,\n    hasKey,\n    getDateParts,\n  } from \"../../config\";\n\n  import {\n    loggedInUserId,\n    presenter_sessions,\n    token,\n    current_presenter,\n    isPresenter,\n  } from \"../../store\";\n\n  import TitleBar from \"../components/title.svelte\";\n  import ProgressBar from \"../components/progressbar.svelte\";\n  import SessionCard from \"../components/sessioncard.svelte\";\n  import AddPresenterView from \"../components/addpresenter.svelte\";\n  import AddSessionView from \"../components/addsession.svelte\";\n  import UnAuthorizedView from \"../components/unauthorized.svelte\";\n  import Meeting from \"../components/meeting.svelte\";\n  import Notify from \"../components/notify.svelte\";\n\n  $: cssClasses = [\"column\"];\n  $: notifyConfig = {\n    cssClass: \"is-info\",\n  };\n\n  let module_config = {\n    is_presenter_sessions_loading: false,\n    isLoading: false,\n    show_presenter_info: false,\n    progres_bar_message: \"\",\n    current_session: {},\n    show_add_session: false,\n    show_notification: false,\n  };\n\n  onMount(async () => {\n    module_config.isLoading = true;\n    const uid = $loggedInUserId;\n    const url = `${apihost}/${appModules.presenter}/${uid}`;\n    const headers = getAuthHeaders($token);\n    $current_presenter = await axios.get(url, headers).then((res) => res.data);\n    module_config.isLoading = false;\n    module_config.show_presenter_info = true;\n    load_presenter_sessions();\n  });\n\n  const load_presenter_sessions = async () => {\n    module_config.is_presenter_sessions_loading = true;\n    const uid = $loggedInUserId;\n    const url = `${apihost}/${appModules.session}/createdby/${uid}`;\n    const headers = getAuthHeaders($token);\n    const result = await axios.get(url, headers).then((res) => res.data);\n    $presenter_sessions = result\n      .map((data) => getDateParts(data, \"scheduledon\"))\n      .sort((a, b) => new Date(b[\"scheduledon\"]) - new Date(a[\"scheduledon\"]));\n    module_config.is_presenter_sessions_loading = false;\n  };\n\n  // the event is a dispatch event coming from component\n  const handleAddPresenter = async (event) => {\n    try {\n      const presenter = event.detail; // dispatch event data is avaible in event.detail\n      const url = `${apihost}/${appModules.presenter}`;\n      presenter.status = 1;\n      const result = await axios\n        .post(url, presenter, getAuthHeaders($token))\n        .then((res) => res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addrequest = () => {\n    module_config.show_add_session = true;\n  };\n\n  const closeaddsession = async () => {\n    const close = event.detail;\n    if (close) {\n      module_config.show_add_session = false;\n      module_config.current_session = {};\n    }\n  };\n  const handlecanelsession = async (event) => {\n    const data = event.detail;\n    console.log(data);\n  };\n  const handlestartsession = async (event) => {\n    const data = event.detail;\n    console.log(data);\n  };\n  const handlestopsession = async (event) => {\n    const data = event.detail;\n    console.log(data);\n  };\n  const handleeditsession = (event) => {\n    module_config.current_session = { ...event.detail };\n    module_config.show_add_session = true;\n  };\n  const handledeletesession = (event) => {\n    const session = event.detail;\n    $presenter_sessions = $presenter_sessions.filter(\n      (s) => s.id !== session.id\n    );\n  };\n  const submitrequest = (event) => {\n    const data = event.detail;\n    notifyConfig = {\n      ...notifyConfig,\n      message: `Request submitted for ${data.title}`,\n    };\n    module_config.show_add_session = false;\n    module_config.show_notification = true;\n  };\n  const closenotify = () => {\n    module_config.show_notification = false;\n  };\n</script>\n\n<style>\n  .container {\n    padding-top: 32px;\n  }\n  .grid-container {\n    padding: 10px;\n    display: grid;\n    grid-gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  }\n  .grid {\n    max-height: 84vh;\n    overflow: auto;\n  }\n</style>\n\n{#if $isPresenter}\n  {#if module_config.isLoading}\n    <div class=\"container\">\n      <ProgressBar module=\"loading presenter data\" />\n    </div>\n  {:else}\n    <div\n      class=\"columns\"\n      style=\"padding-left: 2rem;padding-right: 2rem;padding-top:2rem;\">\n      {#if !module_config.show_presenter_info}\n        <div class={cssClasses.join(' ')}>\n          <div\n            style=\"display: flex;justify-content: space-evenly;align-items:\n            center;\">\n            <div>\n              <TitleBar message=\"Active presenters in maahita\" />\n            </div>\n          </div>\n        </div>\n      {:else}\n        <div class=\"column is-half\">\n          <AddPresenterView\n            presenterdata={$current_presenter}\n            on:submitpresenter={handleAddPresenter}\n            admin=\"false\"\n            add=\"false\"\n            close=\"false\"\n            edit=\"true\" />\n        </div>\n        <div class=\"column is-half\">\n          {#if module_config.is_presenter_sessions_loading}\n            <ProgressBar module={module_config.progres_bar_message} />\n          {:else}\n            <div style=\"display:flex; justify-content:space-between;\">\n              <div>\n                <TitleBar message={module_config.progres_bar_message} />\n              </div>\n              <div>\n                <button on:click={addrequest} class=\"button is-primary\">\n                  <span>\n                    <i class=\"far fa-plus-square\" />\n                  </span>\n                  <span>&nbsp;Request a Session</span>\n                </button>\n              </div>\n            </div>\n            {#if module_config.show_add_session}\n              <AddSessionView\n                add={hasKey(module_config.current_session, 'id') ? 'false' : 'true'}\n                edit={hasKey(module_config.current_session, 'id') ? 'true' : 'false'}\n                currentpresenter={$current_presenter}\n                on:closeaddsession={closeaddsession}\n                on:submitrequest={submitrequest}\n                sessiondata={module_config.current_session} />\n            {/if}\n            {#if $presenter_sessions.length > 0}\n              <div class=\"box\">\n                {#each $presenter_sessions as session}\n                  <SessionCard\n                    on:editsession={handleeditsession}\n                    on:canelsession={handlecanelsession}\n                    on:startsession={handlestartsession}\n                    on:stopsession={handlestopsession}\n                    on:deletesession={handledeletesession}\n                    data={session}\n                    role=\"presenter\" />\n                {/each}\n              </div>\n            {:else}\n              <div class=\"box\">\n                <TitleBar message=\"create sessions to spread the knowledge\" />\n              </div>\n            {/if}\n          {/if}\n        </div>\n      {/if}\n    </div>\n    <Meeting />\n    {#if module_config.show_notification}\n      <Notify on:closenotify={closenotify} config={notifyConfig} />\n    {/if}\n  {/if}\n{:else}\n  <div>\n    <UnAuthorizedView message=\"You are not authorized to view the content\" />\n  </div>\n{/if}\n",
    "<script>\n  import axios from \"axios\";\n  import { onMount } from \"svelte\";\n  import {\n    apihost,\n    appModules,\n    getAuthHeaders,\n    getDateParts,\n    getFormattedDate,\n  } from \"../../config\";\n\n  import { sessionrequests, isAdmin, token } from \"../../store\";\n\n  import TitleBar from \"../components/title.svelte\";\n  import ProgressBar from \"../components/progressbar.svelte\";\n  import Notify from \"../components/notify.svelte\";\n  import UnAuthorizedView from \"../components/unauthorized.svelte\";\n\n  $: notifyConfig = {\n    cssClass: \"is-info\",\n  };\n\n  let module_config = {\n    is_presenter_sessions_loading: false,\n    is_loading: false,\n    show_presenter_info: false,\n    progres_bar_message: \"\",\n    add_new_presenter: false,\n    show_add_session: false,\n    show_notification: false,\n  };\n\n  onMount(async () => {\n    if ($isAdmin) {\n      module_config.is_loading = true;\n      const url = `${apihost}/${appModules.sessionrequest}`;\n      const headers = getAuthHeaders($token);\n      const result = await axios.get(url, headers).then((res) => res.data);\n      result.forEach((d) => {\n        d[\"scheduled\"] = getFormattedDate(d, \"scheduledon\");\n      });\n      $sessionrequests = result;\n      module_config.is_loading = false;\n    }\n  });\n\n  const closenotify = () => (module_config[\"show_notification\"] = false);\n\n  const approvesession = async (session) => {\n    try {\n      const url = `${apihost}/${appModules.sessionrequest}/${session.id}`;\n      const headers = getAuthHeaders($token);\n      session.status = 200; //approve\n      const result = await axios\n        .put(url, session, headers)\n        .then((res) => res.data);\n      if (result) {\n        $sessionrequests = $sessionrequests.filter(\n          (ses) => ses.id !== session.id\n        );\n        notifyConfig[\"message\"] = `${session.title} is approved`;\n        module_config[\"show_notification\"] = true;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const rejectsession = async (session) => {\n    try {\n      const url = `${apihost}/${appModules.sessionrequest}/${session.id}`;\n      const headers = getAuthHeaders($token);\n      session.status = 300; //approve\n      const result = await axios\n        .put(url, session, headers)\n        .then((res) => res.data);\n      if (result) {\n        $sessionrequests = $sessionrequests.filter(\n          (ses) => ses.id !== session.id\n        );\n        notifyConfig[\"message\"] = `${session.title} is approved`;\n        module_config[\"show_notification\"] = true;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n</script>\n\n<style>\n  .container {\n    padding-top: 32px;\n  }\n  .title {\n    font-size: 1.2rem;\n    margin-bottom: 0px;\n  }\n  .media {\n    margin-top: 0px;\n    padding-top: 0px;\n    justify-content: space-between;\n    align-items: center;\n  }\n</style>\n\n<div class=\"container\">\n  {#if $isAdmin}\n    {#if module_config.is_loading}\n      <ProgressBar module=\"session requests\" />\n    {:else}\n      <TitleBar message=\"Session requests by various presenters\" />\n      {#if $sessionrequests.length > 0}\n        <div class=\"box\">\n          {#each $sessionrequests as session}\n            <article class=\"media\">\n              <div class=\"column title\">{session.title}</div>\n              <div class=\"column schedule\">{session.scheduled}</div>\n              <div class=\"column schedule\">{session.description}</div>\n              <div class=\"column presenter\">{session.presenter}</div>\n              <div class=\"column buttons\">\n                <button\n                  class=\"button is-primary\"\n                  on:click={() => approvesession(session)}>\n                  Approve\n                </button>\n                <button\n                  class=\"button is-danger\"\n                  on:click={() => rejectsession(session)}>\n                  Reject\n                </button>\n              </div>\n            </article>\n          {/each}\n        </div>\n      {:else}\n        <div class=\"box\">\n          <TitleBar message=\"create sessions to spread the knowledge\" />\n        </div>\n      {/if}\n    {/if}\n  {:else}\n    <div>\n      <UnAuthorizedView message=\"You are not authorized to view the content\" />\n    </div>\n  {/if}\n  {#if module_config.show_notification}\n    <Notify on:closenotify={closenotify} config={notifyConfig} />\n  {/if}\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import axios from \"axios\";\n\n  import TitleBar from \"../components/title.svelte\";\n  import ProgressBar from \"../components/progressbar.svelte\";\n  import Modal from \"../components/modal.svelte\";\n  import SessionCard from \"../components/sessioncard.svelte\";\n  import Meeting from \"../components/meeting.svelte\";\n  import Notify from \"../components/notify.svelte\";\n  import {\n    apihost,\n    appModules,\n    getDateParts,\n    getAuthHeaders,\n  } from \"../../config\";\n  import { sessions, loggedInUserId, token } from \"../../store\";\n\n  $: notifyConfig = {\n    cssClass: \"is-info\",\n  };\n\n  let module_config = {\n    showModal: false,\n    is_loading: false,\n    show_notification: false,\n  };\n\n  onMount(async () => {\n    module_config.is_loading = true;\n    const url = apihost + \"/\" + appModules.session;\n    const result = await axios\n      .get(url, getAuthHeaders($token))\n      .then((res) => res.data);\n    $sessions = result\n      .map((data) => getDateParts(data, \"scheduledon\"))\n      .sort((a, b) => new Date(b[\"scheduledon\"]) - new Date(a[\"scheduledon\"]));\n    module_config.is_loading = false;\n  });\n\n  const enroll = async (session) => {\n    try {\n      const id = $loggedInUserId;\n      const url = `${apihost}/${appModules.session}/enroll/${id}`;\n      const result = await axios\n        .post(url, session, getAuthHeaders($token))\n        .then((res) => res.data);\n      if (result) {\n        notifyConfig = {\n          cssClass: \"is-info\",\n          message: `Successfully enrolled for ${session.title}`,\n        };\n        module_config.show_notification = true;\n      }\n    } catch (error) {\n      notifyConfig = {\n        cssClass: \"is-error\",\n        message: `Issue encountered to enroll for ${session.title}`,\n      };\n      module_config.show_notification = true;\n    }\n  };\n  const modalClose = () => (module_config.showModal = false);\n  const closenotify = () => {\n    module_config.show_notification = false;\n  };\n</script>\n\n<style>\n  .container {\n    scroll-behavior: smooth;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 70%;\n  }\n</style>\n\n<div class=\"container\">\n  {#if module_config.is_loading}\n    <ProgressBar module=\"session\" />\n  {:else}\n    <TitleBar message=\"Current Sessions in mƒÅhita\" />\n    {#each $sessions as session}\n      <SessionCard\n        on:click={() => enroll(session)}\n        role=\"user\"\n        data={session} />\n    {/each}\n  {/if}\n  {#if module_config.showModal}\n    <Modal\n      on:click={modalClose}\n      message=\"Please login to the system to enroll\" />\n  {/if}\n  <Meeting />\n  {#if module_config.show_notification}\n    <Notify on:closenotify={closenotify} config={notifyConfig} />\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AA+CE,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,AACd,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,OAAO,gBAAC,QAAQ,CAC3B,KAAK,CAAC,IAAI,CAAC,OAAO,gBAAC,KAAK,kBAAkB,CAAC,QAAQ,AAAC,CAAC,AACnD,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,gBAAC,QAAQ,CAC9B,KAAK,CAAC,IAAI,CAAC,UAAU,gBAAC,KAAK,kBAAkB,CAAC,QAAQ,AAAC,CAAC,AACtD,KAAK,CAAE,GAAG,AACZ,CAAC;ACqJD,UAAU,aAAC,CAAC,AACV,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,eAAe,aAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,AAC7D,CAAC,AACD,KAAK,aAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,IAAI,AAChB,CAAC;ACzKD,QAAQ,cAAC,CAAC,AACR,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,AACd,CAAC;ACuCD,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,UAAU,AAC7B,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,KAAK,eAAC,CAAC,AACL,YAAY,CAAE,IAAI,AACpB,CAAC;ACzGD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC;ACuCD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,CAAC,UAAU,AAC7B,CAAC,AACD,UAAU,eAAC,CAAC,AACV,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC7D,eAAe,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC1D,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CACrD,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,aAAa,eAAC,CAAC,AACb,SAAS,CAAE,MAAM,CACjB,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,GAAG,AACjB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,OAAO,AAC3B,CAAC;AC9DD,aAAa,eAAC,CAAC,AACb,SAAS,CAAE,KAAK,CAChB,YAAY,CAAE,IAAI,CAClB,GAAG,CAAE,IAAI,CACT,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,UAAU,CACtB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,EAAE,CACT,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,sBAAO,CAAC,EAAE,AACvB,CAAC,AAED,WAAW,sBAAQ,CAAC,AAClB,EAAE,AAAC,CAAC,AACF,iBAAiB,CAAE,MAAM,CAAC,CAAC,CAC3B,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,iBAAiB,CAAE,MAAM,CAAC,CAAC,CAC3B,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,AACf,CAAC,AACH,CAAC;AC1BD,WAAW,cAAC,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,WAAW,cAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,aAAa,cAAC,CAAC,AACb,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,OAAO,AAC3B,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,AACd,CAAC;ACyHD,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,GAAG,AACd,CAAC,AACD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,GAAG,CACrB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,sBAAsB,CAAE,GAAG,CAC3B,uBAAuB,CAAE,GAAG,AAC9B,CAAC,AAED,cAAc,eAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,GAAG,CACrB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,aAAa,eAAC,CAAC,AACb,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CACrB,yBAAyB,CAAE,GAAG,CAC9B,0BAA0B,CAAE,GAAG,CAC/B,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,cAAc,eAAC,CAAC,AACd,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,CAAC,eAAC,CAAC,AACD,MAAM,CAAE,KAAK,CAAC,UAAU,CACxB,KAAK,CAAE,KAAK,CAAC,UAAU,AACzB,CAAC,AACD,cAAc,eAAC,CAAC,AACd,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,oBAAoB,eAAC,CAAC,AACpB,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,GAAG,CAAC,CAAC,AAChB,CAAC,AAED,cAAc,eAAC,CAAC,AACd,OAAO,CAAE,GAAG,CAAC,CAAC,AAChB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,WAAW,uBAAS,CAAC,AACnB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,OAAO,CAAE,IAAI,AACf,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,MAAM,CAAC,CAAC,CACnB,OAAO,CAAE,IAAI,AACf,CAAC,AACH,CAAC,AACD,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,uBAAQ,CAAC,EAAE,CAAC,QAAQ,AACjC,CAAC;AClOD,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,MAAM,CACjB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,WAAW,AAC1B,CAAC;ACTD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC;ACqBD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,IAAI,CACd,eAAe,CAAE,MAAM,AACzB,CAAC;ACuFD,UAAU,aAAC,CAAC,AACV,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,eAAe,aAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,AAC7D,CAAC,AACD,KAAK,aAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,IAAI,AAChB,CAAC;ACnDD,UAAU,cAAC,CAAC,AACV,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,GAAG,CAChB,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC;AChCD,UAAU,cAAC,CAAC,AACV,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,IAAI,CACd,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,GAAG,AACZ,CAAC"
}